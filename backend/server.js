const express = require('express');
const cors = require('cors');
const path = require('path'); // âœ… Importa path para servir archivos estÃ¡ticos
const connectDB = require('./config/db');
require('dotenv').config();

const authRoutes = require('./routes/authRoutes');
const bookingRoutes = require('./routes/bookingRoutes');
const userRoutes = require('./routes/userRoutes');
const serviceRoutes = require('./routes/serviceRoutes'); // ðŸ“Œ Nueva ruta para servicios

const app = express();
const PORT = process.env.PORT || 5002;

// âœ… Conectar a la base de datos
connectDB();

// âœ… Middleware
app.use(cors());
app.use(express.json()); // Para leer JSON en el body

// âœ… Servir archivos estÃ¡ticos desde la carpeta frontend
app.use(express.static(path.join(__dirname, 'frontend')));

// âœ… Rutas de la API
app.use('/api/auth', authRoutes);
app.use('/api/bookings', bookingRoutes);
app.use('/api/users', userRoutes);
app.use('/api/services', serviceRoutes); // ðŸ“Œ Ruta para la gestiÃ³n de servicios

// âœ… Ruta de prueba para verificar que el servidor funciona
app.get('/', (req, res) => {
    res.send('ðŸš€ API funcionando correctamente');
});

// âœ… Iniciar el servidor
app.listen(PORT, () => {
    console.log(`ðŸš€ Servidor corriendo en http://127.0.0.1:${PORT}`);
});